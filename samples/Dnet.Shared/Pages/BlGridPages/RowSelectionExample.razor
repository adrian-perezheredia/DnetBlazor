@page "/RowSelectionExample"

@using System.Net.Http.Json
@using Dnet.App.Shared.Infrastructure.Entities
@using Dnet.App.Shared.Infrastructure.Services
@using Dnet.Blazor.Components.AdminLayout.Infrastructure.Enums
@using Dnet.Blazor.Components.AdminLayout.Infrastructure.Interfaces
@using Dnet.Blazor.Components.AdminLayout.Infrastructure.Models
@using Dnet.Blazor.Components.Grid.BlgGrid
@using Dnet.Blazor.Components.Grid.Infrastructure.Entities
@using Dnet.Blazor.Components.Grid.Infrastructure.Enums
@using Dnet.Blazor.Infrastructure.Models.SearchModels

@inject IApplicationServiceService ApplicationServiceService
@inject IGridConfigurationService GridConfigurationService

<div class="container-fluid" style="padding-top: 10px;">
    <div class="row" style="height: calc(100% - 40px)">
        <div class="col-12" style="height: calc(100% - 0px);">
            <div class="dnet-panel-header-wrapper dnet-m-t-15">
                <div class="dnet-panel-header-text">
                    <div class="dnet-m-l-15">
                        <span style="font-weight:700; font-size:.875rem;"> Grid (A.K.A BlGrid)</span>
                    </div>
                </div>
            </div>
            <div style="height: calc(100% - 0px); width: 100%; background-color: #FFFFFF">
                <BlgGrid @ref="_blGridReference"
                         GridData="@Persons"
                         GridColumns="@GridColumns"
                         TItem="Person"
                         GridOptions="GridOptions"
                         OnRowClicked="OnRowClicked"
                         OnSelectionChanged="SelectionChanged">
                </BlgGrid>
            </div>
        </div>
    </div>
</div>

@code {

    private BlgGrid<Person> _blGridReference;

    public List<Person> Persons { get; set; }

    public List<GridColumn<Person>> GridColumns { get; set; }

    public GridColumn<Person> GroupGridColumn { get; set; }

    public GridOptions<Person> GridOptions { get; set; }

    private List<Person> _selectedPerson { get; set; } = new List<Person>();


    protected override async Task OnInitializedAsync()
    {
        GridOptions = GridConfigurationService.GetGridOptions();

        var persons = await ApplicationServiceService.GetPersons();

        GridOptions.NumberOfRows = persons.Count;

        Persons = persons;

        GridColumns = GridConfigurationService.GetGridColumns();

        StateHasChanged();
    }

    public async Task OnRowClicked(RowNode<Person> rowNode)
    {
        var clickedRowNode = rowNode;
    }

    public void SelectionChanged(List<RowNode<Person>> rowNodes)
    {
        _selectedPerson = rowNodes.Select(p => p.RowData).ToList();
    }

    public void SelectAll()
    {
        _blGridReference.SelectAll();
    }

    public void DeselectAll()
    {
        _blGridReference.DeselectAll();
    }

    private bool _showChecks = true;
    public async Task ToggleChecks()
    {
        _showChecks = !_showChecks;

        GridOptions.CheckboxSelectionColumn = _showChecks;

        await _blGridReference.SetColumnDefsAsync(GridColumns);
    }
}